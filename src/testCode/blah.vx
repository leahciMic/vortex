foo := {
  a: 10,
  b: 2,
};

x := 1; // #info #validation #is-duplicated
y := 1; // #info #warning #info #unused #is-duplicated
foo.a = x := 2; // #error #error #error #subexpression-mutation #duplicate #value-needed
foo.a = (x = (y := 2)); // #error #error #error #duplicate #subexpression-mutation (creation just more deeply nested)
foo.a = (x.y := 2); // #error #subexpression-mutation also not ok (removed exception for adding props)
foo.c := 3;
foo.d := {};
y := 3; // #error #duplicate

func() { // TODO: top level anonymous function can't be called
  a := 1; // #warning #unused
  return b := 1; // #error #warning #subexpression-mutation #unused
};

a++; // #error #not-found

foo.d.e := 42; // #error #return-failure
