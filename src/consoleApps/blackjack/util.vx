import util;

return {
  MinMax: func(a, b) => switch (a < b) {
    true => [a, b];
    false => [b, a];
  },

  abs: func(x) => switch (x >= 0) {
    true => x;
    false => -x;
  },

  pick: func(arr, rand) {
    pickI := arr:Length() * rand;
    pickI -= pickI % 1;

    newArr := [];
    picked := null;

    for ([i, x] of arr:Entries()) {
      if (i == pickI) {
        picked = x;
      } else {
        newArr ++= [x];
      }
    }

    return [picked, newArr];
  },

  iterateRand: func iterateRand(rand) {
    r := rand;

    for (i := 0; i < 5; i++) {
      r -= (r ** 2 + 1) / (2 * r);
    }

    if (r == r + 1) {
      return iterateRand(iterateRand(rand + 0.1) + 0.1);
    }

    return util.abs(1000 * r) % 1;
  },

  repeat: func(x, n) {
    res := [];

    for (i := 0; i < n; i++) {
      res ++= [x];
    }

    return res;
  },
};
