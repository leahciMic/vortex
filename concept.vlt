// hello.vlt
return 'Hello world';

// stuff.vlt
foo := 'bar';
return foo:length();

// blah
foo := {
  a: 10,
  b: 2,
};

foo.a = 1;
foo.c := 3;
foo.d := {};
foo.d.e := 42;

// pair class
return class Pair {
  first: f64;
  second: f64;

  static :zero() => Pair({ first: 0, second: 0 });

  :product() => first * second;

  :swap() {
    [first, second] = [second, first];
    return this;
  }

  :surpriseMe() {
    fig1 := first + second;
    fig2 := this:product();

    fig1++;

    fig1 += this:product();

    return 2 * fig1 + fig2;
  }
};

// Error.vlt (in core?)
return class Error: string {};

// factorial.vlt
import Error from 'core';

return func factorial(n: i32) => switch {
  (n < 0) => Error('Invalid input'); // ?
  (n == 0) => 1;
  (true) => n * factorial(n - 1);
};

// factorial5.vlt
return (import factorial)(5);

// double.vlt
return (x: f64) => 2 * x;
